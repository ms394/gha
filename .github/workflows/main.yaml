name:  Migrate Secrets
run-name: Migrate Secrets


on:
    workflow_dispatch:
      inputs:
        source-project:
          description: 'Select Source Project'
          required: true
          default: 'tst-aaa-blk-dev-ini2-01'
          type: choice
          options:
            - 'tst-aaa-blk-dev-ini2-01'
            - 'tst-aaa-blk-qa-ini2-01'

        target-project:
          description: 'Select Target Project'
          required: true
          default: 'tst-aaa-blk-qa-ini2-01'
          type: choice
          options:
            - 'tst-aaa-blk-dev-ini2-01'
            - 'tst-aaa-blk-qa-ini2-01'
        
jobs:
  convert_project_names:
    name: Get SA Secrets for the projects
    runs-on: ubuntu-latest
    outputs:
        SOURCE_PROJECT: ${{ steps.get_project_names.outputs.SOURCE_PROJECT }}
        TARGET_PROJECT: ${{ steps.get_project_names.outputs.TARGET_PROJECT }}
        SOURCE_PROJECT_KEY: ${{ steps.get_project_names.outputs.SOURCE_PROJECT_KEY }}
        TARGET_PROJECT_KEY: ${{ steps.get_project_names.outputs.TARGET_PROJECT_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt 
          
      - name: Get Project names and modify them
        id: get_project_names
        run: |
            SOURCE_PROJECT_INPUT=${{ github.event.inputs.source-project }}
            TARGET_PROJECT_INPUT=${{github.event.inputs.target-project }}
            echo $SOURCE_PROJECT_INPUT
  #           SOURCE_PROJECT_RAW=$(echo "$SOURCE_PROJECT_INPUT" | tr 'a-z' 'A-Z' | tr '-' '_') 
  #           TARGET_PROJECT_RAW=$(echo "$TARGET_PROJECT_INPUT" | tr 'a-z' 'A-Z' | tr '-' '_')
  #           SOURCE_SECRET_KEY: ${{SOURCE_PROJECT_RAW}}_SA_SECRET
  #           TARGET_SECRET_KEY: ${{TARGET_PROJECT_RAW}}_SA_SECRET
            
  #           echo "::set-output name=SOURCE_PROJECT::$SOURCE_PROJECT"
  #           echo "::set-output name=TARGET_PROJECT::$TARGET_PROJECT"
  #           echo "::set-output name=SOURCE_SECRET_KEY::$SOURCE_SECRET_KEY"
  #           echo "::set-output name=TARGET_SECRET_KEY::$TARGET_SECRET_KEY"
    
  # access-secrets:  
  #   name: Run Python Script
  #   runs-on: ubuntu-latest
  #   needs: convert_project_names
  #   environment: staging
  #   steps:
  #       - name: Checkout code
  #         uses: actions/checkout@v2

        
  #       - name: Retrieve and use Secret Key
  #         env:
  #             SOURCE_PROJECT: ${{ needs.convert_project_names.outputs.SOURCE_PROJECT}}
  #             TARGET_PROJECT: ${{ needs.convert_project_names.outputs.TARGET_PROJECT}}
  #             SOURCE_SECRET_KEY: ${{ needs.convert_project_names.outputs.SOURCE_SECRET_KEY}}
  #             TARGET_SECRET_KEY: ${{ needs.convert_project_names.outputs.TARGET_SECRET_KEY }}
              
          
  #         run: |
  #           # Access the secrets using environment variables
            
  #           # Use the secrets
  #           SOURCE_SECRET=${{ secrets[env.SOURCE_SECRET_KEY] }}
  #           TARGET_SECRET=${{ secrets[env.TARGET_SECRET_KEY] }}
  #           echo "SOURCE_PROJECT=${SOURCE_PROJECT}"
  #           echo "TARGET_PROJECT=${TARGET_PROJECT}"
  #           echo "SOURCE_SECRET=${SOURCE_SECRET}"
  #           echo "TARGET_SECRET=${TARGET_SECRET}"
  #           python -u main.py $SOURCE_PROJECT $SOURCE_SECRET $TARGET_PROJECT $TARGET_SECRET
